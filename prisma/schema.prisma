// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DB_URL")
}

model sentence {
  id         Int      @id @default(autoincrement())
  words      String   @unique
  ratings    rating[]
  source     source   @relation(fields: [source_id], references: [id])
  source_id  Int
  deleted    Boolean  @default(false)
  created_at DateTime @default(now())
  updated_at DateTime @default(now()) @updatedAt
}

model source {
  id         Int        @id @default(autoincrement())
  name       String     @unique
  sentences  sentence[]
  created_at DateTime   @default(now())
  updated_at DateTime   @default(now()) @updatedAt
}

model rater {
  id         Int      @id @default(autoincrement())
  name       String   @unique
  ratings    rating[]
  created_at DateTime @default(now())
  updated_at DateTime @default(now()) @updatedAt
}

model tag {
  id          Int          @id @default(autoincrement())
  name        String       @unique
  description String?
  ratings     tag_rating[]
  created_at  DateTime     @default(now())
  updated_at  DateTime     @default(now()) @updatedAt
}

model rating {
  id          Int          @id @default(autoincrement())
  rater       rater        @relation(fields: [rater_id], references: [id])
  rater_id    Int
  sentence    sentence     @relation(fields: [sentence_id], references: [id])
  sentence_id Int
  tags        tag_rating[]
  explanation String?
  created_at  DateTime     @default(now())
  updated_at  DateTime     @default(now()) @updatedAt
}

model tag_rating {
  id        Int    @id @default(autoincrement())
  tag       tag    @relation(fields: [tag_id], references: [id])
  tag_id    Int
  rating    rating @relation(fields: [rating_id], references: [id])
  rating_id Int
}
